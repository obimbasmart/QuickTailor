"""add message and not tables

Revision ID: e33e820c734c
Revises: 8fb09f9958e5
Create Date: 2024-07-24 16:29:49.828167

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'e33e820c734c'
down_revision = '8fb09f9958e5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('messages_list',
    sa.Column('user_id', sa.String(length=128), nullable=False),
    sa.Column('tailor_id', sa.String(length=128), nullable=False),
    sa.Column('message', sa.String(length=255), nullable=False),
    sa.Column('user_url', sa.String(length=255), nullable=False),
    sa.Column('tailor_url', sa.String(length=255), nullable=False),
    sa.Column('is_viewed', sa.Boolean(), nullable=True),
    sa.Column('tailor_img_url', sa.String(length=255), nullable=True),
    sa.Column('user_img_url', sa.String(length=255), nullable=True),
    sa.Column('last_sender', sa.String(length=128), nullable=True),
    sa.Column('id', sa.String(length=60), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tailor_id'], ['tailors.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('sender_user_id', sa.String(length=128), nullable=True),
    sa.Column('reciever_user_id', sa.String(length=128), nullable=True),
    sa.Column('sender_tailor_id', sa.String(length=128), nullable=True),
    sa.Column('reciever_tailor_id', sa.String(length=128), nullable=True),
    sa.Column('product_id', sa.String(length=128), nullable=True),
    sa.Column('thread_msg_id', sa.String(length=128), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('media_url', sa.String(length=255), nullable=True),
    sa.Column('media_type', sa.String(length=50), nullable=True),
    sa.Column('is_viewed', sa.Boolean(), nullable=True),
    sa.Column('id', sa.String(length=60), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['reciever_tailor_id'], ['tailors.id'], ),
    sa.ForeignKeyConstraint(['reciever_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sender_tailor_id'], ['tailors.id'], ),
    sa.ForeignKeyConstraint(['sender_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('user_id', sa.String(length=128), nullable=True),
    sa.Column('tailor_id', sa.String(length=128), nullable=True),
    sa.Column('sender_user_id', sa.String(length=128), nullable=True),
    sa.Column('sender_tailor_id', sa.String(length=128), nullable=True),
    sa.Column('product_id', sa.String(length=128), nullable=True),
    sa.Column('content', sa.String(length=128), nullable=False),
    sa.Column('message_id', sa.String(length=128), nullable=True),
    sa.Column('is_clicked', sa.Boolean(), nullable=True),
    sa.Column('is_user', sa.Boolean(), nullable=True),
    sa.Column('url', sa.String(length=128), nullable=False),
    sa.Column('id', sa.String(length=60), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['sender_tailor_id'], ['tailors.id'], ),
    sa.ForeignKeyConstraint(['sender_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['tailor_id'], ['tailors.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('last_name',
               existing_type=mysql.VARCHAR(length=128),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('last_name',
               existing_type=mysql.VARCHAR(length=128),
               nullable=True)

    op.drop_table('notifications')
    op.drop_table('messages')
    op.drop_table('messages_list')
    # ### end Alembic commands ###
